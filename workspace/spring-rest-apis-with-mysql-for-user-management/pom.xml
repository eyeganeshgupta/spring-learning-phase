<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Model version for the POM, always 4.0.0 for Maven 2 and later -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent project from which this project inherits settings -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.5</version>
        <relativePath/> <!-- This indicates to resolve the parent from the repository -->
    </parent>

    <!-- Unique identifier for the project in a group of related projects -->
    <groupId>io.spring</groupId>

    <!-- Name of the artifact (project) being generated -->
    <artifactId>spring-rest-apis-with-mysql-for-user-management</artifactId>

    <!-- Version of the project -->
    <version>0.0.1-SNAPSHOT</version>

    <!-- Human-readable name of the project -->
    <name>spring-rest-apis-with-mysql-for-user-management</name>

    <!-- Description of the project -->
    <description>spring-rest-apis-with-mysql-for-user-management</description>

    <!-- URL to the project's homepage (optional) -->
    <url/>

    <!-- Licensing information for the project (optional) -->
    <licenses>
        <license/>
    </licenses>

    <!-- Information about developers involved in the project (optional) -->
    <developers>
        <developer/>
    </developers>

    <!-- Source control management information (optional) -->
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>

    <!-- Properties used throughout the POM, such as Java version -->
    <properties>
        <java.version>17</java.version> <!-- Specifies Java version compatibility -->
    </properties>

    <!-- Dependencies required for building and running the project -->
    <dependencies>
        <!-- Spring Boot Starter for JPA, provides default configurations for using JPA with Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Spring Boot Starter for building web applications, including RESTful applications -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Starter for using Java Bean Validation with Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Starter for Spring Boot Actuator, provides production-ready features to help monitor and manage applications -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Dependency for SpringDoc OpenAPI integration with Spring MVC and UI support -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.6.0</version>
        </dependency>

        <!-- MySQL JDBC driver needed at runtime for connecting to MySQL databases -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope> <!-- Only required at runtime, not compile time -->
        </dependency>

        <!-- Lombok library to reduce boilerplate code by generating getters, setters, etc., at compile time -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional> <!-- Optional dependency as it is only needed during compilation -->
        </dependency>

        <!-- Testing framework starter including JUnit, Hamcrest, and Mockito libraries for testing purposes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope> <!-- Only needed during testing phase -->
        </dependency>
    </dependencies>

    <!-- Build configuration details including plugins used in the build process -->
    <build>
        <plugins>
            <!-- Plugin to package Spring Boot applications as executable JARs or WARs -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>

                <!-- Configuration specific to this plugin, such as excluding certain dependencies from packaging -->
                <configuration>
                    <!-- Excludes Lombok from being included in the final packaged artifact since it's only needed during compilation -->
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>

            </plugin>

        </plugins>

    </build>

</project>
